USE Student_Management
GO

-- Print a list of students in a class
CREATE PROC LIST_STUDENT_OF_CLASS
		@ID_CLASS VARCHAR(10)
AS
	BEGIN 
		SELECT STUDENT.* FROM STUDENT
			LEFT JOIN CLASS ON STUDENT.ID_CLASS = CLASS.ID
				WHERE CLASS.ID = @ID_CLASS
	END
GO

EXEC LIST_STUDENT_OF_CLASS 'TH2002/01'
GO

-- Enter 2 students, 1 subject, find out which student has a higher score on that subject the first time.
CREATE FUNCTION FIRST_SCORE
(
	@ID_STUDENT VARCHAR(50),
	@ID_SUBJECT VARCHAR(50)
)
RETURNS FLOAT
AS
	BEGIN
		DECLARE @RESULT FLOAT
			SET @RESULT = 0;
				SELECT @RESULT = RESULT.SCORE FROM RESULT
					WHERE RESULT.ID_STUDENT = @ID_STUDENT
					AND RESULT.ID_SUBJECT = @ID_SUBJECT
					AND RESULT.TEST_TIME = 1
		RETURN @RESULT
	END
GO

CREATE PROC COMPARE_SCORE
	@ID_STUDENT1 VARCHAR(50),
	@ID_STUDENT2 VARCHAR(50),
	@ID_SUBJECT VARCHAR(10)
AS 
	BEGIN 
		DECLARE @RESULT1 FLOAT
		DECLARE @RESULT2 FLOAT
		SELECT @RESULT1 = DBO.FIRST_SCORE(@ID_STUDENT1, @ID_SUBJECT)
		SELECT @RESULT2 = DBO.FIRST_SCORE(@ID_STUDENT2, @ID_SUBJECT)
	IF @RESULT1 > @RESULT2
		PRINT @ID_STUDENT1
	ELSE 
		PRINT @ID_STUDENT2
	END
GO

EXEC COMPARE_SCORE '0212001', '0212002', 'THT01'
GO

-- Enter 1 subject and 1 student code, check if the student has passed this subject on the first test, if passed, output "Pass", if not, output "Fail"
CREATE PROC CHECK_RESULT_FIRST_TIME
	@ID_STUDENT VARCHAR(50),
	@ID_SUBJECT VARCHAR(50)
AS
	BEGIN
		IF (EXISTS (SELECT * FROM RESULT
					WHERE RESULT.ID_STUDENT = @ID_STUDENT
					AND RESULT.ID_SUBJECT = @ID_SUBJECT
					AND RESULT.TEST_TIME = 1
					AND RESULT.SCORE >=5 ))
				PRINT 'PASS'
		ELSE
				PRINT'FAIL'
	END
GO

-- ANOTHER WAY 
CREATE PROC CHECK_RESULT_FIRST_TIME
	@ID_STUDENT VARCHAR(50),
	@ID_SUBJECT VARCHAR(50)
AS
	BEGIN
		DECLARE @RESULT FLOAT
			SELECT * FROM RESULT
					WHERE RESULT.ID_STUDENT = @ID_STUDENT
					AND RESULT.ID_SUBJECT = @ID_SUBJECT
					AND RESULT.TEST_TIME = 1
		IF @RESULT >=5			
				PRINT 'PASS'
		ELSE
				PRINT'FAIL'
	END
GO

EXEC CHECK_RESULT_FIRST_TIME '0212002', 'THT01'
GO
EXEC CHECK_RESULT_FIRST_TIME '0212003', 'THT02'
GO

-- Enter a faculty, print a list of students (student code, full name, date of birth) in this faculty.
CREATE PROC LIST_STUDENT_FACULTY
	@ID_FACULTY VARCHAR(10)
AS
	BEGIN
		SELECT STUDENT.* FROM STUDENT
		LEFT JOIN CLASS ON CLASS.ID = STUDENT.ID_CLASS
		LEFT JOIN FACULTY ON FACULTY.ID = CLASS.ID_FACULTY
		WHERE FACULTY.ID = @ID_FACULTY
	END
GO

EXEC LIST_STUDENT_FACULTY 'CNTT'
GO 

-- Enter 1 student and 1 subject, and print this student's scores from the SINGLE exams for that subject.
CREATE PROC SCORE_AND_TEST_TIME
	@ID_STUDENT VARCHAR(10),
	@ID_SUBJECT VARCHAR(10)
AS
	BEGIN 
		SELECT RESULT.SCORE, RESULT.TEST_TIME, SUBJECT.NAME FROM RESULT
			LEFT JOIN SUBJECT ON SUBJECT.ID = RESULT.ID_SUBJECT
			WHERE RESULT.ID_STUDENT =@ID_STUDENT
			AND RESULT.ID_SUBJECT = @ID_SUBJECT
	END
GO

EXEC SCORE_AND_TEST_TIME '0212001' , 'THT01'
GO

-- Enter 1 student, print out the subjects that this student has to study.
CREATE PROC CHECK_SUBJECT_MUST_LEARN_PROC
	@ID_STUDENT VARCHAR(10)
AS
	BEGIN
		SELECT * FROM DBO.CHECK_SUBJECT_MUST_LEARN(@ID_STUDENT)
	END
GO

EXEC CHECK_SUBJECT_MUST_LEARN_PROC '0311001'
GO

-- Enter a subject, print the list of students who passed this subject on the first test
CREATE FUNCTION CHECK_SCORE_FIRST_TIME
(
	@ID_STUDENT VARCHAR(10),
	@ID_SUBJECT VARCHAR(10)
)
RETURNS VARCHAR(10)
AS 
	BEGIN 
		DECLARE @SCORE FLOAT
			SET @SCORE = 0 
				SELECT @SCORE = RESULT.SCORE FROM RESULT
				WHERE @ID_STUDENT = RESULT.ID_STUDENT
				AND @ID_SUBJECT = RESULT.ID_SUBJECT
				AND RESULT.TEST_TIME = 1
		IF @SCORE >=5 
			RETURN 'PASS'
		ELSE 
			RETURN 'FAIL'
		RETURN 'FAIL'
	END
GO

CREATE PROC CHECK_SCORE_FIRST_TIME_PROC
	@ID_SUBJECT VARCHAR(10)
AS 
	BEGIN 
		SELECT RESULT.ID_SUBJECT, STUDENT.NAME, DBO.CHECK_SCORE_FIRST_TIME(RESULT.ID_STUDENT, RESULT.ID_SUBJECT) AS [RESULT] FROM RESULT
			LEFT JOIN STUDENT ON STUDENT.ID = RESULT.ID_STUDENT
			WHERE RESULT.ID_SUBJECT = @ID_SUBJECT --'THT01'
			AND RESULT.TEST_TIME = 1
			AND RESULT.SCORE >=5
			GROUP BY RESULT.ID_SUBJECT, STUDENT.NAME, RESULT.ID_STUDENT
	END
GO

EXEC CHECK_SCORE_FIRST_TIME_PROC 'THT01'
GO

-- Print the student's subject scores with the ID_STUDENT entered.
-- (Note: the grade of the subject is the score of the last exam)
CREATE PROC SCORE_SUBJECT
	 @ID_STUDENT VARCHAR(10)
AS
	BEGIN 
		SELECT STUDENT.NAME, SUBJECT.NAME, RESULT.SCORE FROM RESULT
		LEFT JOIN STUDENT ON STUDENT.ID = RESULT.ID_STUDENT
		LEFT JOIN SUBJECT ON SUBJECT.ID = RESULT.ID_SUBJECT
		WHERE RESULT.ID_STUDENT = @ID_STUDENT
		AND RESULT.TEST_TIME = (SELECT MAX(RESULT2.TEST_TIME) FROM RESULT AS RESULT2
										WHERE RESULT.ID_STUDENT = RESULT2.ID_STUDENT
										AND RESULT.ID_SUBJECT = RESULT2.ID_SUBJECT
								)
	END
GO

EXEC SCORE_SUBJECT '0212003'
GO

-- Add 1 relationship
-- Regulation: Student's RESULT is "Pass" if his/her score (only subjects with scores) is greater than or equal to 5 and no more than 2 subjects are less than 4 points, otherwise, the result is failed into the rating. 
CREATE FUNCTION RESULT_STUDENT
(
	@ID_STUDENT VARCHAR(50)
)
RETURNS VARCHAR(10)
AS
	BEGIN 
		DECLARE @AVG_SCORE FLOAT(2)
		DECLARE @RESULT VARCHAR(10)
			SET @AVG_SCORE = 0
				SELECT @AVG_SCORE = DBO.AVERAGE_SCORE_CAL(@ID_STUDENT)
					IF @AVG_SCORE >=5
						SET @RESULT = 'PASS'
					ELSE 
						SET @RESULT = 'FAIL'
		RETURN @RESULT
	END
GO

CREATE FUNCTION CLASSIFY_STUDENT
(
	@ID_STUDENT VARCHAR(50)
)
RETURNS VARCHAR(10)
AS
	BEGIN
		DECLARE @AVG_SCORE FLOAT(2)
		DECLARE @RESULT VARCHAR(10)
			SET @AVG_SCORE = 0
				SELECT @AVG_SCORE = DBO.AVERAGE_SCORE_CAL(@ID_STUDENT)
					IF @AVG_SCORE >= 8 
						SET @RESULT = 'GOOD'
					ELSE IF @AVG_SCORE < 8 AND @AVG_SCORE >= 7
						SET @RESULT = 'FAIRLY GOOD'
					ELSE 
						SET @RESULT = 'AVERAGE'
		RETURN @RESULT
	END
GO

CREATE TABLE CLASSIFICATION_STUDENT
(
	ID_STUDENT VARCHAR(50) PRIMARY KEY,
	AVG_SCORE FLOAT(2),
	RESULT NVARCHAR(10),
	CLASSIFY NVARCHAR(10)

	FOREIGN KEY (ID_STUDENT) REFERENCES STUDENT(ID)
)
GO

INSERT INTO CLASSIFICATION_STUDENT(ID_STUDENT) 
SELECT ID FROM STUDENT
GO

UPDATE CLASSIFICATION_STUDENT
SET AVG_SCORE = DBO.AVERAGE_SCORE_CAL(ID_STUDENT)
GO

UPDATE CLASSIFICATION_STUDENT
SET RESULT = DBO.RESULT_STUDENT(ID_STUDENT)
GO

UPDATE CLASSIFICATION_STUDENT
SET CLASSIFY = DBO.CLASSIFY_STUDENT(ID_STUDENT)
GO

SELECT * FROM CLASSIFICATION_STUDENT